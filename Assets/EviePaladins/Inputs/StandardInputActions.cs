//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/EviePaladins/Inputs/StandardInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @StandardInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @StandardInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""StandardInputActions"",
    ""maps"": [
        {
            ""name"": ""FirstPersonStandard"",
            ""id"": ""11c05255-e02a-45ae-8912-f3c83d0fd8aa"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""7c9f4e10-33a2-41f0-b4cc-86135ac01931"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""1c7a2ae8-4d90-46b2-8f06-303f05812c6a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""44ff7d54-41fc-4cc7-899c-c9f147d90fe0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""M1"",
                    ""type"": ""Button"",
                    ""id"": ""01d914ca-a814-4a7c-ae4a-f0308d60bca3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""M2"",
                    ""type"": ""Button"",
                    ""id"": ""2d461cc6-1504-4c16-8118-c780d73ae025"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QSkill"",
                    ""type"": ""Button"",
                    ""id"": ""0721b6d4-ff80-4b79-a5a3-5d076417a953"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FSkill"",
                    ""type"": ""Button"",
                    ""id"": ""dd9bf1e3-3cb4-4be9-a416-2004b97c924d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""97ec1026-afe7-42e3-a863-d6acbabfbce6"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""66831902-1dc9-4aee-a408-30d2faf395a0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0f2963d8-2dc6-4c17-bb44-a253d0be25cb"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""63233144-d1f0-44bd-bb00-54a820215432"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e6e4bff0-67c2-4f67-b752-ca4782c80646"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""eb5ca426-2a1d-4b46-9954-c848f392cc4a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba8454dc-08bc-4472-8dba-d47403b77954"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05e3a93f-1e21-4cd6-a27f-124bf30aa07a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""M1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c14574c-132e-41ec-9fae-030ec2c3a97b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""QSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba2f771e-0552-49cb-ab27-c0ce41aab3de"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""FSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd85fde6-cd22-42c3-9c04-1cd73632cae1"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""M2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""MouseKeyboard"",
            ""bindingGroup"": ""MouseKeyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // FirstPersonStandard
        m_FirstPersonStandard = asset.FindActionMap("FirstPersonStandard", throwIfNotFound: true);
        m_FirstPersonStandard_Movement = m_FirstPersonStandard.FindAction("Movement", throwIfNotFound: true);
        m_FirstPersonStandard_Jump = m_FirstPersonStandard.FindAction("Jump", throwIfNotFound: true);
        m_FirstPersonStandard_Look = m_FirstPersonStandard.FindAction("Look", throwIfNotFound: true);
        m_FirstPersonStandard_M1 = m_FirstPersonStandard.FindAction("M1", throwIfNotFound: true);
        m_FirstPersonStandard_M2 = m_FirstPersonStandard.FindAction("M2", throwIfNotFound: true);
        m_FirstPersonStandard_QSkill = m_FirstPersonStandard.FindAction("QSkill", throwIfNotFound: true);
        m_FirstPersonStandard_FSkill = m_FirstPersonStandard.FindAction("FSkill", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FirstPersonStandard
    private readonly InputActionMap m_FirstPersonStandard;
    private IFirstPersonStandardActions m_FirstPersonStandardActionsCallbackInterface;
    private readonly InputAction m_FirstPersonStandard_Movement;
    private readonly InputAction m_FirstPersonStandard_Jump;
    private readonly InputAction m_FirstPersonStandard_Look;
    private readonly InputAction m_FirstPersonStandard_M1;
    private readonly InputAction m_FirstPersonStandard_M2;
    private readonly InputAction m_FirstPersonStandard_QSkill;
    private readonly InputAction m_FirstPersonStandard_FSkill;
    public struct FirstPersonStandardActions
    {
        private @StandardInputActions m_Wrapper;
        public FirstPersonStandardActions(@StandardInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_FirstPersonStandard_Movement;
        public InputAction @Jump => m_Wrapper.m_FirstPersonStandard_Jump;
        public InputAction @Look => m_Wrapper.m_FirstPersonStandard_Look;
        public InputAction @M1 => m_Wrapper.m_FirstPersonStandard_M1;
        public InputAction @M2 => m_Wrapper.m_FirstPersonStandard_M2;
        public InputAction @QSkill => m_Wrapper.m_FirstPersonStandard_QSkill;
        public InputAction @FSkill => m_Wrapper.m_FirstPersonStandard_FSkill;
        public InputActionMap Get() { return m_Wrapper.m_FirstPersonStandard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FirstPersonStandardActions set) { return set.Get(); }
        public void SetCallbacks(IFirstPersonStandardActions instance)
        {
            if (m_Wrapper.m_FirstPersonStandardActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnJump;
                @Look.started -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnLook;
                @M1.started -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnM1;
                @M1.performed -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnM1;
                @M1.canceled -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnM1;
                @M2.started -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnM2;
                @M2.performed -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnM2;
                @M2.canceled -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnM2;
                @QSkill.started -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnQSkill;
                @QSkill.performed -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnQSkill;
                @QSkill.canceled -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnQSkill;
                @FSkill.started -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnFSkill;
                @FSkill.performed -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnFSkill;
                @FSkill.canceled -= m_Wrapper.m_FirstPersonStandardActionsCallbackInterface.OnFSkill;
            }
            m_Wrapper.m_FirstPersonStandardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @M1.started += instance.OnM1;
                @M1.performed += instance.OnM1;
                @M1.canceled += instance.OnM1;
                @M2.started += instance.OnM2;
                @M2.performed += instance.OnM2;
                @M2.canceled += instance.OnM2;
                @QSkill.started += instance.OnQSkill;
                @QSkill.performed += instance.OnQSkill;
                @QSkill.canceled += instance.OnQSkill;
                @FSkill.started += instance.OnFSkill;
                @FSkill.performed += instance.OnFSkill;
                @FSkill.canceled += instance.OnFSkill;
            }
        }
    }
    public FirstPersonStandardActions @FirstPersonStandard => new FirstPersonStandardActions(this);
    private int m_MouseKeyboardSchemeIndex = -1;
    public InputControlScheme MouseKeyboardScheme
    {
        get
        {
            if (m_MouseKeyboardSchemeIndex == -1) m_MouseKeyboardSchemeIndex = asset.FindControlSchemeIndex("MouseKeyboard");
            return asset.controlSchemes[m_MouseKeyboardSchemeIndex];
        }
    }
    public interface IFirstPersonStandardActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnM1(InputAction.CallbackContext context);
        void OnM2(InputAction.CallbackContext context);
        void OnQSkill(InputAction.CallbackContext context);
        void OnFSkill(InputAction.CallbackContext context);
    }
}
